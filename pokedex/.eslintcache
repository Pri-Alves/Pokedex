[{"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\routes.js":"1","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\index.js":"2","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\PokemonList.js":"3","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\SearchBar.js":"4","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\App.js":"5"},{"size":313,"mtime":1611263689081,"results":"6","hashOfConfig":"7"},{"size":8293,"mtime":1611360011896,"results":"8","hashOfConfig":"7"},{"size":401,"mtime":1611352229110,"results":"9","hashOfConfig":"7"},{"size":387,"mtime":1611352229111,"results":"10","hashOfConfig":"7"},{"size":173,"mtime":1611111194452,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zicip",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\routes.js",[],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\index.js",["23","24","25","26","27"],"import axios from 'axios';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport SearchBar from './Components/SearchBar';\r\nimport PokemonList from './Components/PokemonList';\r\n\r\nconst NUMBEROFPOKEMON = 898;\r\nlet allPokemonNames = []\r\n\r\nfunction Home(props){\r\n\r\n\r\nlet isLoading = true;\r\n\r\nconst mainDiv = document.getElementById(\"root\");\r\nconst [input, setInput] = useState('');\r\nconst [pokemonListDefault, setPokemonListDefault] = useState();\r\nconst [pokemonList, setPokemonList] = useState();\r\n//\r\n// function getAllPokemonNames(){\r\n//\r\n//   let i = 1;\r\n//   while(i<899){\r\n//\r\n//     axios.get('https://pokeapi.co/api/v2/pokemon/'+ i)\r\n//     .then(\r\n//       response =>{\r\n//       allPokemonNames.push(response.data.name);\r\n//       }\r\n//     )\r\n//     .catch(err =>{\r\n//       //console.log(\"Erro ao pegar o pokemon + \"+ name);\r\n//       console.log(err);\r\n//     })\r\n//     i+=1;\r\n//   }//while\r\n//   console.log(allPokemonNames);\r\n// }\r\n\r\n\r\n\r\nlet paginaAtual = 1;\r\nconst ITENS_POR_PAGINA = 20;\r\n\r\n\r\nfunction getPokemon(){\r\n\r\n\r\n  axios.get('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=9999')\r\n  .then(response =>{\r\n    //console.log(response);\r\n    // setTimeout( function(){\r\n    //   document.getElementById(\"loading\").style.display = \"none\";\r\n    // }, 1500);\r\n\r\n    const pokemons = response.data.results;\r\n\r\n    const paginatedData = paginateData(pokemons);//[[][][]]\r\n\r\n\r\n\r\n\r\n    let cardContainer = document.querySelector(\".card-wrapper\");\r\n\r\n\r\n    while (cardContainer.firstChild) {\r\n       cardContainer.removeChild(cardContainer.firstChild);\r\n    }\r\n\r\n\r\n    paginatedData[paginaAtual - 1].forEach(pokemon =>{\r\n\r\n      const { name, url } = pokemon;\r\n\r\n      axios.get(url) //pega cada um\r\n      .then(response =>{\r\n      setTimeout( function(){ //mudar lugar\r\n      document.getElementById(\"loading\").style.display = \"none\";}, 1500);\r\n\r\n\r\n        const atributosDoPokemon = response.data;\r\n        const id = atributosDoPokemon.id;\r\n        const types = atributosDoPokemon.types;\r\n\r\n        var imageUrl = atributosDoPokemon.sprites.front_default;\r\n        if (imageUrl == null) {\r\n          imageUrl = atributosDoPokemon.sprites.other['official-artwork'].front_default;\r\n          if (imageUrl == null) {\r\n            imageUrl = 'https://cdn-0.imagensemoldes.com.br/wp-content/uploads/2020/04/Logo-Pokebola-Pok%C3%A9mon-PNG.png';\r\n          }\r\n        }\r\n\r\n        // let cardContainer = document.createElement(\"div\");\r\n        // cardContainer.className =\"card-container\";\r\n        let cardContainer = document.querySelector(\".card-wrapper\");\r\n\r\n        mainDiv.appendChild(cardContainer);\r\n        createCard(id,name, imageUrl, types, cardContainer);\r\n\r\n\r\n      })//segundo .then\r\n      .catch(err =>{\r\n        console.log(\"Erro ao pegar o pokemon + \"+ name);\r\n        console.log(err);\r\n      })\r\n\r\n\r\n      }); //for each\r\n\r\n      renderPaginationMenu(paginatedData);\r\n\r\n  })//fim do primeiro then\r\n  .catch(err => {\r\n      console.log(\"Erro ao puxar os pokemons\")\r\n      console.log(err);\r\n    });\r\n}//fim de getPokemon\r\n\r\nconst paginateData = (data) => {\r\n  //receber o valor total e o atual para dividir o numero de paginas\r\n  return data.reduce((total,current, index) => {\r\n      const belongArrayIndex = Math.ceil((index + 1 )/ ITENS_POR_PAGINA) -1\r\n      total[belongArrayIndex] ? total[belongArrayIndex].push(current) : total.push([current])\r\n      return total\r\n  }, [])\r\n} //paginateData ok\r\n\r\nconst changePage = (pageToBeRendered) => {\r\n  paginaAtual = pageToBeRendered\r\n  getPokemon()\r\n}//método de mudar de página\r\n\r\nconst renderPaginationMenu = (paginatedData) => {\r\n\r\n  const paginationContainer = document.querySelector('.pagination');\r\n\r\n  console.log(paginationContainer);\r\n\r\n  while (paginationContainer.firstChild) {\r\n      paginationContainer.removeChild(paginationContainer.firstChild);\r\n  }\r\n  //esvaziamos essa div a cada render para que não seja rendedrizado o menu com os dados da página antiga do usuário\r\n\r\n  const previousPage = document.createElement('span');\r\n  previousPage.className = 'page-changer';\r\n  previousPage.innerHTML = '<';\r\n  previousPage.addEventListener('click', () => paginaAtual <= 1 ? () => { } : changePage(paginaAtual - 1));\r\n  paginationContainer.appendChild(previousPage);\r\n  //geramos um botão que ao ser clicado atualiza chama o método de mudar de página passando a página anterior se a página\r\n  //atual não for 1\r\n\r\n  paginatedData.forEach((_, index) => {\r\n      //para cada array (página) dentro do nosso array total criaremos um botão numerado para ir para aquela página\r\n      const pageButton = document.createElement('span');\r\n      pageButton.innerHTML = (index + 1) +\" \"//index + 1 porque os indices começam em 0 e queremos mostrar a primeira página como 1\r\n\r\n      pageButton.addEventListener('click', () => changePage(index + 1));\r\n\r\n      if (paginaAtual === index + 1) {\r\n          pageButton.className = 'active';\r\n      }\r\n\r\n      paginationContainer.appendChild(pageButton);\r\n  })\r\n\r\n  const nextPage = document.createElement('span');\r\n  nextPage.className = 'page-changer';\r\n  nextPage.innerHTML = '>';\r\n  nextPage.addEventListener('click', () => paginaAtual >= paginatedData.length ? () => { } : changePage(paginaAtual + 1));\r\n\r\n  paginationContainer.appendChild(nextPage);\r\n\r\n  //por fim, método de avançãr a página que funciona igual o de voltar a página só que ao contrário :)\r\n}// renderPaginationMenu\r\n\r\n\r\nfunction createCard(id, name, imageUrl, types, cardContainer){\r\n  //agora crio uma card com cada informação\r\n\r\n  let card = document.createElement(\"div\");\r\n  card.className = \"card\";\r\n\r\n  let cardInnerArea = document.createElement(\"div\");\r\n  cardInnerArea.className = \"card-inner-area\";\r\n\r\n  let cardImg = document.createElement(\"img\");\r\n  cardImg.className = \"card-img\";\r\n  cardImg.src = imageUrl;\r\n\r\n  let cardTextInfo = document.createElement(\"div\");\r\n  cardTextInfo.className = \"card-text-info\";\r\n\r\n  let cardName = document.createElement(\"div\");\r\n  cardName.className = \"card-name\";\r\n  cardName.innerHTML = name;\r\n\r\n  let cardId = document.createElement(\"div\");\r\n  cardId.className = \"card-id\";\r\n  cardId.innerHTML = \"#\"+id;\r\n\r\n  let typeNames = \"\";\r\n  types.forEach(element => typeNames += \" \" +element.type.name);\r\n\r\n  let cardType = document.createElement(\"div\");\r\n  cardType.className = \"types\";\r\n  cardType.innerHTML = typeNames;\r\n\r\n  let buttonCapturar = document.createElement(\"button\");\r\n  buttonCapturar.className = \"blue-button\";\r\n  buttonCapturar.innerHTML =  \"Capturar\";\r\n\r\n\r\n\r\n  cardContainer.appendChild(card);\r\n  card.appendChild(cardInnerArea);\r\n  cardInnerArea.appendChild(cardImg);\r\n  cardInnerArea.appendChild(cardTextInfo);\r\n  cardTextInfo.appendChild(cardId);\r\n  cardTextInfo.appendChild(cardName);\r\n  cardTextInfo.appendChild(cardType);\r\n\r\n\r\n\r\n  card.appendChild(buttonCapturar);\r\n\r\n} //fim de createCard\r\n\r\n//getAllPokemonNames();\r\ngetPokemon();\r\n\r\n\r\n //barra de pesquisa\r\n\r\n  const fetchData = async () => {\r\n    return await fetch('https://pokeapi.co/api/v2/pokemon?offset=0&limit=1118')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n         setPokemonList(data.results) \r\n         setPokemonListDefault(data.results)   \r\n       });}\r\n    \r\n\r\n  const updateInput = async (input) => {\r\n     const filtered = pokemonListDefault.filter(pokemon => {\r\n      return pokemon.name.toLowerCase().includes(input.toLowerCase())\r\n     })\r\n     setInput(input);\r\n     setPokemonList(filtered);\r\n    \r\n  }\r\n\r\n  useEffect( () => {fetchData()},[]);\r\n\r\n\r\nreturn(\r\n\r\n\r\n<>\r\n\r\n<nav>\r\n<img src = \"./images/logo.png\" alt = \"Pokedex Logo\" class = \"logo\"/>\r\n<ul>\r\n  <li><a class = \"item-navegacao\" href = \"#\"> Todos PKMN </a></li>\r\n  <li><a class = \"item-navegacao\"  href = \"#\"> Meus PKMN </a></li>\r\n  <SearchBar \r\n       input={input} \r\n       onChange={updateInput}\r\n       pokemonList={pokemonList}\r\n      />\r\n       <PokemonList pokemonList={pokemonList}/>\r\n      \r\n  \r\n\r\n</ul>\r\n</nav>\r\n\r\n\r\n<div id=\"loading\">\r\n  <img id=\"loading-image\" src=\"images/pikachu-dancing.gif\" alt=\"Carregando...\" />\r\n  <p id = \"pagina-carregando\">Página Carregando</p>\r\n</div>\r\n\r\n<div class = \"card-wrapper\">\r\n</div>\r\n<div class=\"pagination-wrapper\">\r\n  <div class=\"pagination\"></div>\r\n</div>\r\n\r\n\r\n</>\r\n\r\n\r\n);\r\n\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\PokemonList.js",[],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\SearchBar.js",["28"],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\App.js",[],{"ruleId":"29","severity":1,"message":"30","line":7,"column":7,"nodeType":"31","messageId":"32","endLine":7,"endColumn":22},{"ruleId":"29","severity":1,"message":"33","line":8,"column":5,"nodeType":"31","messageId":"32","endLine":8,"endColumn":20},{"ruleId":"29","severity":1,"message":"34","line":13,"column":5,"nodeType":"31","messageId":"32","endLine":13,"endColumn":14},{"ruleId":"35","severity":1,"message":"36","line":263,"column":7,"nodeType":"37","endLine":263,"endColumn":46},{"ruleId":"35","severity":1,"message":"36","line":264,"column":7,"nodeType":"37","endLine":264,"endColumn":47},{"ruleId":"29","severity":1,"message":"38","line":3,"column":8,"nodeType":"31","messageId":"32","endLine":3,"endColumn":19},"no-unused-vars","'NUMBEROFPOKEMON' is assigned a value but never used.","Identifier","unusedVar","'allPokemonNames' is assigned a value but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PokemonList' is defined but never used."]