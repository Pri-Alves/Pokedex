[{"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\routes.js":"1","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\index.js":"2","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\SearchBar.js":"3","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pokemos\\TodoItems.js":"4","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\MeusPokemons\\index.js":"5","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pokemos\\TodoList.js":"6","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\PokemonList.js":"7","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\App.js":"8"},{"size":434,"mtime":1611395592111,"results":"9","hashOfConfig":"10"},{"size":9961,"mtime":1611401585942,"results":"11","hashOfConfig":"10"},{"size":387,"mtime":1611396772524,"results":"12","hashOfConfig":"10"},{"size":1439,"mtime":1611361894350,"results":"13","hashOfConfig":"10"},{"size":1527,"mtime":1611395592109,"results":"14","hashOfConfig":"10"},{"size":2643,"mtime":1611361894353,"results":"15","hashOfConfig":"10"},{"size":401,"mtime":1611352229110,"results":"16","hashOfConfig":"10"},{"size":173,"mtime":1611111194452,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"zicip",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\routes.js",[],["39","40"],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\index.js",["41","42","43","44"],"import axios from 'axios';\r\nimport React, { useEffect, useState,  Component } from \"react\";\r\nimport SearchBar from './Components/SearchBar';\r\nimport PokemonList from './Components/PokemonList';\r\nimport TodoList from '../../Pokemos/TodoList';\r\n\r\nconst mainDiv = document.getElementById(\"root\");\r\nconst jaForamCapturados = false;\r\n\r\nexport function renderArray(array, jaForamCapturados){\r\n array.forEach(pokemon => {\r\n\r\n   const { name, url } = pokemon;\r\n\r\n   axios.get(url) //pega cada um\r\n     .then(response => {\r\n       setTimeout(function () { //mudar lugar\r\n         document.getElementById(\"loading\").style.display = \"none\";\r\n       }, 1500);\r\n\r\n\r\n       const atributosDoPokemon = response.data;\r\n       const id = atributosDoPokemon.id;\r\n       const types = atributosDoPokemon.types;\r\n\r\n       var imageUrl = atributosDoPokemon.sprites.front_default;\r\n       if (imageUrl == null) {\r\n         imageUrl = atributosDoPokemon.sprites.other['official-artwork'].front_default;\r\n         if (imageUrl == null) {\r\n           imageUrl = 'https://cdn-0.imagensemoldes.com.br/wp-content/uploads/2020/04/Logo-Pokebola-Pok%C3%A9mon-PNG.png';\r\n         }\r\n       }\r\n\r\n       // let cardContainer = document.createElement(\"div\");\r\n       // cardContainer.className =\"card-container\";\r\n       let cardContainer = document.querySelector(\".card-wrapper\");\r\n\r\n       mainDiv.appendChild(cardContainer);\r\n\r\n       createCard(id, name, imageUrl, types, cardContainer, jaForamCapturados);\r\n       // createPokemonCard(id, name, imageUrl, types)\r\n\r\n     })//segundo .then\r\n     .catch(err => {\r\n       console.log(\"Erro ao pegar o pokemon + \" + name);\r\n       console.log(err);\r\n     })\r\n\r\n\r\n }); //for each\r\n\r\n\r\n} //fim render array\r\n\r\nfunction createCard(id, name, imageUrl, types, cardContainer, jaForamCapturados){\r\n    //agora crio uma card com cada informação\r\n\r\n    let card = document.createElement(\"div\");\r\n    card.className = \"card\";\r\n    card.id = name;\r\n\r\n    let cardInnerArea = document.createElement(\"div\");\r\n    cardInnerArea.className = \"card-inner-area\";\r\n\r\n    let cardImg = document.createElement(\"img\");\r\n    cardImg.className = \"card-img\";\r\n    cardImg.src = imageUrl;\r\n\r\n    let cardTextInfo = document.createElement(\"div\");\r\n    cardTextInfo.className = \"card-text-info\";\r\n\r\n    let cardName = document.createElement(\"div\");\r\n    cardName.className = \"card-name\";\r\n    cardName.innerHTML = name;\r\n\r\n    let cardId = document.createElement(\"div\");\r\n    cardId.className = \"card-id\";\r\n    cardId.innerHTML = \"#\" + id;\r\n\r\n\r\n  let buttonCapturar = document.createElement(\"button\");\r\n  buttonCapturar.className = \"blue-button\";\r\n\r\n  if(!jaForamCapturados){\r\n      buttonCapturar.innerHTML =  \"Capturar\";\r\n      buttonCapturar.addEventListener('click', capturarPokemon);\r\n  }\r\n  else{\r\n    buttonCapturar.innerHTML =  \"Soltar\";\r\n    buttonCapturar.addEventListener('click', soltarPokemon);\r\n  }\r\n\r\n  buttonCapturar.name = name;\r\n\r\n    let typeNames = \"\";\r\n    types.forEach(element => typeNames += \" \" + element.type.name);\r\n\r\n    let cardType = document.createElement(\"div\");\r\n    cardType.className = \"types\";\r\n    cardType.innerHTML = typeNames;\r\n\r\n\r\n  cardContainer.appendChild(card);\r\n  card.appendChild(cardInnerArea);\r\n  cardInnerArea.appendChild(cardImg);\r\n  cardInnerArea.appendChild(cardTextInfo);\r\n  cardTextInfo.appendChild(cardId);\r\n  cardTextInfo.appendChild(cardName);\r\n  cardTextInfo.appendChild(cardType);\r\n    card.appendChild(buttonCapturar);\r\n  } //fim de createCard\r\n\r\n  function capturarPokemon(e){\r\n    let name = e.path[1].id;\r\n\r\n    if (!pokemonsCapturados.includes(name)){\r\n      let url = \"https://pokeapi.co/api/v2/pokemon/\"+name;\r\n      pokemonsCapturados.push({name:name,  url:url});\r\n      localStorage.setItem('pokemonsCapturados', JSON.stringify(pokemonsCapturados));\r\n      console.log(\"Capturou \"+ name);\r\n    }\r\n    else{\r\n      console.log(\"Pokémon \"+ name+\" já capturado\");\r\n    }\r\n\r\n  }//fim de capturar pokemon\r\n\r\n  function soltarPokemon(e){\r\n    let name = e.path[1].id;\r\n    console.log(name);\r\n    removeCard(name);\r\n    pokemonsCapturados = pokemonsCapturados.filter(function(el){return el.name !== name});\r\n    localStorage.setItem('pokemonsCapturados', JSON.stringify(pokemonsCapturados));\r\n  }\r\n\r\nfunction removeCard(name){\r\n  document.getElementById(name).remove();\r\n}\r\n\r\n\r\nlet pokemonsCapturados = [];\r\n\r\nfunction Home(props){\r\n\r\n\r\n\r\n\r\nconst [input, setInput] = useState('');\r\nconst [pokemonListDefault, setPokemonListDefault] = useState();\r\nconst [pokemonList, setPokemonList] = useState();\r\n//const [pokemons, setPokemons] = useState();\r\n\r\nlet pokemons = [];\r\n\r\n\r\n  let paginaAtual = 1;\r\n  const ITENS_POR_PAGINA = 20;\r\n\r\n\r\n\r\n\r\n  function createPokemonCard(id, name, imageUrl, types) {\r\n    // altera o estado adicionando +1 pokemon na lista\r\n    pokemons.push({ key: id, title: name, text: name, imageUrl: imageUrl, types: types })\r\n    //setPokemons(pokemons)\r\n    // useState(0);\r\n  }\r\n\r\n\r\n  function getPokemon() {\r\n    axios.get('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=9999')\r\n      .then(response => {\r\n        //console.log(response);\r\n        // setTimeout( function(){\r\n        //   document.getElementById(\"loading\").style.display = \"none\";\r\n        // }, 1500);\r\n\r\n        const pokemons = response.data.results;\r\n        const paginatedData = paginateData(pokemons);\r\n        renderPaginationMenu(paginatedData);\r\n\r\n    let cardContainer = document.querySelector(\".card-wrapper\");\r\n\r\n    while (cardContainer.firstChild) {\r\n       cardContainer.removeChild(cardContainer.firstChild);\r\n    }\r\n\r\n        renderArray(paginatedData[paginaAtual - 1]);\r\n\r\n\r\n        renderPaginationMenu(paginatedData);\r\n\r\n      })//fim do primeiro then\r\n      .catch(err => {\r\n        console.log(\"Erro ao puxar os pokemons\")\r\n        console.log(err);\r\n      });\r\n  }//fim de getPokemon\r\n\r\n\r\n\r\n\r\n\r\n  const paginateData = (data) => {\r\n    //receber o valor total e o atual para dividir o numero de paginas\r\n    return data.reduce((total, current, index) => {\r\n      const belongArrayIndex = Math.ceil((index + 1) / ITENS_POR_PAGINA) - 1\r\n      total[belongArrayIndex] ? total[belongArrayIndex].push(current) : total.push([current])\r\n      return total\r\n    }, [])\r\n  } //paginateData ok\r\n\r\n  const changePage = (pageToBeRendered) => {\r\n    paginaAtual = pageToBeRendered\r\n    getPokemon()\r\n  }//método de mudar de página\r\n\r\n  const renderPaginationMenu = (paginatedData) => {\r\n\r\n    const paginationContainer = document.querySelector('.pagination');\r\n\r\n    console.log(paginationContainer);\r\n\r\n    while (paginationContainer.firstChild) {\r\n      paginationContainer.removeChild(paginationContainer.firstChild);\r\n    }\r\n    //esvaziamos essa div a cada render para que não seja rendedrizado o menu com os dados da página antiga do usuário\r\n\r\n    const previousPage = document.createElement('span');\r\n    previousPage.className = 'page-changer';\r\n    previousPage.innerHTML = '<';\r\n    previousPage.addEventListener('click', () => paginaAtual <= 1 ? () => { } : changePage(paginaAtual - 1));\r\n    paginationContainer.appendChild(previousPage);\r\n    //geramos um botão que ao ser clicado atualiza chama o método de mudar de página passando a página anterior se a página\r\n    //atual não for 1\r\n\r\n    paginatedData.forEach((_, index) => {\r\n      //para cada array (página) dentro do nosso array total criaremos um botão numerado para ir para aquela página\r\n      const pageButton = document.createElement('span');\r\n      pageButton.innerHTML = (index + 1) + \" \"//index + 1 porque os indices começam em 0 e queremos mostrar a primeira página como 1\r\n\r\n      pageButton.addEventListener('click', () => changePage(index + 1));\r\n\r\n      if (paginaAtual === index + 1) {\r\n        pageButton.className = 'active';\r\n      }\r\n\r\n      paginationContainer.appendChild(pageButton);\r\n    })\r\n\r\n    const nextPage = document.createElement('span');\r\n    nextPage.className = 'page-changer';\r\n    nextPage.innerHTML = '>';\r\n    nextPage.addEventListener('click', () => paginaAtual >= paginatedData.length ? () => { } : changePage(paginaAtual + 1));\r\n\r\n    paginationContainer.appendChild(nextPage);\r\n\r\n    //por fim, método de avançãr a página que funciona igual o de voltar a página só que ao contrário :)\r\n  }// fim de renderPaginationMenu\r\n\r\n\r\n\r\n\r\n\r\n//getPokemon();\r\n\r\n  //getAllPokemonNames();\r\n\r\n  useEffect(() => { getPokemon() }, []);\r\n\r\n\r\n  //barra de pesquisa\r\n\r\n  const fetchData = async () => {\r\n    return await fetch('https://pokeapi.co/api/v2/pokemon?offset=0&limit=1118')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n         setPokemonList(data.results)\r\n         setPokemonListDefault(data.results)\r\n       });}\r\n\r\n\r\n  const updateInput = async (input) => {\r\n     const filtered = pokemonListDefault.filter(pokemon => {\r\n      return pokemon.name.toLowerCase().includes(input.toLowerCase())\r\n     })\r\n     setInput(input);\r\n     setPokemonList(filtered);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => { fetchData() }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <>\r\n\r\n\r\n\r\n\r\n<nav>\r\n<img src = \"./images/logo.png\" alt = \"Pokedex Logo\" class = \"logo\"/>\r\n<ul>\r\n  <li><a class = \"item-navegacao\" href = \"/\"> Todos PKMN </a></li>\r\n  <li><a class = \"item-navegacao\"  href = \"/meuspokemons\"> Meus PKMN </a></li>\r\n  <SearchBar\r\n       input={input}\r\n       onChange={updateInput}\r\n       pokemonList={pokemonList}\r\n      />\r\n       <PokemonList pokemonList={pokemonList}/>\r\n\r\n\r\n\r\n        </ul>\r\n      </nav>\r\n\r\n\r\n      <div id=\"loading\">\r\n        <img id=\"loading-image\" src=\"images/pikachu-dancing.gif\" alt=\"Carregando...\" />\r\n        <p id=\"pagina-carregando\">Página Carregando</p>\r\n      </div>\r\n\r\n      <div class=\"card-wrapper\">\r\n        <div class=\"card-item\">\r\n          <TodoList items={pokemons} />\r\n        </div>\r\n      </div>\r\n      <div class=\"pagination-wrapper\">\r\n        <div class=\"pagination\"></div>\r\n      </div>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n  \r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\SearchBar.js",["45"],"\r\nimport React from 'react';\r\nimport PokemonList from './PokemonList'\r\n\r\nconst SearchBar = ({input:keyword, onChange:setKeyword}) => {\r\n \r\n  return (\r\n    <>\r\n    <input \r\n     class=\"caixa-buscar\"\r\n     key=\"random1\"\r\n     value={keyword}\r\n     placeholder={\"Buscar pokemon\"}\r\n     onChange={(e) => setKeyword(e.target.value)}\r\n    />\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchBar","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pokemos\\TodoItems.js",[],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\MeusPokemons\\index.js",["46","47","48","49"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport {renderArray} from '../Home'\r\nimport SearchBar from '../Home/Components/SearchBar'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst jaForamCapturados = true;\r\n\r\nexport default function MeusPokemons(){\r\n  const history = useHistory();\r\n  const [ pokemonsList, setPokemonsList ] = useState([]);\r\n let pokemonsCapturados = []\r\n\r\n useEffect(() => {\r\n  let pokemonsList = localStorage.getItem('pokemonsCapturados');\r\n  if (pokemonsList != null) {\r\n  pokemonsList = JSON.parse(pokemonsList);\r\n  setPokemonsList(pokemonsList)\r\n  console.log(pokemonsList)\r\n\r\n  renderArray(pokemonsList,jaForamCapturados );\r\n\r\n\r\n  } else {\r\n      history.push('')\r\n  }\r\n}, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n return (\r\n\r\n\r\n  <>\r\n\r\n\r\n\r\n\r\n<nav>\r\n<img src = \"./images/logo.png\" alt = \"Pokedex Logo\" class = \"logo\"/>\r\n<ul>\r\n<li><a class = \"item-navegacao\" href = \"/\"> Todos PKMN </a></li>\r\n<li><a class = \"item-navegacao\"  href = \"/meuspokemons\"> Meus PKMN </a></li>\r\n{/*  <SearchBar\r\n     input={input}\r\n     onChange={updateInput}\r\n     pokemonList={pokemonList}\r\n    />\r\n     <PokemonList pokemonList={pokemonList}/>\r\n */}\r\n\r\n\r\n      </ul>\r\n    </nav>\r\n\r\n\r\n    <div id=\"loading\">\r\n      <img id=\"loading-image\" src=\"images/pikachu-dancing.gif\" alt=\"Carregando...\" />\r\n      <p id=\"pagina-carregando\">Página Carregando</p>\r\n    </div>\r\n\r\n    <div class=\"card-wrapper\">\r\n\r\n    </div>\r\n    <div class=\"pagination-wrapper\">\r\n      <div class=\"pagination\"></div>\r\n    </div>\r\n\r\n\r\n  </>\r\n\r\n\r\n);\r\n\r\n}\r\n","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pokemos\\TodoList.js",["50"],"import React, { Component } from \"react\";\r\nimport TodoItems from \"./TodoItems\";\r\nimport \"./TodoList.css\";\r\n\r\n\r\n// página de manipulação de formulários\r\n// onSubmit={this.addItem}: permite adicionar um item\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // no objeto state é definido uma matriz, que será responsável por armazenar os itens\r\n    this.state = {\r\n      items: this.props.items || [],\r\n      myItems: this.props.myItems || []\r\n    };\r\n\r\n    // this.addItem = this.addItem.bind(this); // addItem(manipulador de eventos) é chamado quando o formulário é enviado\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n  }\r\n  \r\n  //gera uma lista com os pokemons\r\n  getApiPokemon() {\r\n\r\n    let items = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      items.push({\r\n        key: \"00\" + i,\r\n        text: \"Poke1\" + i\r\n      })\r\n\r\n    }\r\n\r\n    return {\r\n      \"items\": items\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // GET na api de pokemons\r\n    // Ao receber o valor\r\n    // envia o resultado no estado\r\n    // let pokemons = this.getApiPokemon()\r\n    // this.setState({ items: pokemons.items })\r\n  }\r\n\r\n  addItem(e) {\r\n    console.log(this.state.items);\r\n    e.preventDefault(); \r\n  }\r\n\r\n  \r\n  deleteItem(key) {\r\n  //essa função está sendo usada para \"capturar\" o pokemon\r\n  //falta pegar o pokemon capturado e colocar ele na parte dos meus pokemons\r\n    var filteredItems = this.state.items.filter(function (item) {\r\n      return (item.key !== key);\r\n    });\r\n\r\n    var item = this.state.items.find(function(item) {\r\n      return item.key == key\r\n    })\r\n    //guarda os pokemons capturados \r\n    var myItems = this.state.myItems\r\n    myItems.push(item)\r\n\r\n\r\n    this.setState({\r\n      items: filteredItems, \r\n      myItems: myItems\r\n    });\r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n    \r\n    return (\r\n      <div className=\"todoListMain\">\r\n        <div className=\"header\">\r\n          {/* <nav>\r\n            <img src = \"\" alt = \"Pokedex Logo\" class = \"logo\"/>\r\n            <ul>\r\n              <li><a class = \"item-navegacao\" href = \"#\"> Todos PKMN </a></li>\r\n              <li><a class = \"item-navegacao\"  href = \"#\"> Meus PKMN </a></li>\r\n              <input class = \"caixa-buscar\" placeholder = \"Buscar...\"></input>\r\n            </ul>\r\n          </nav> */}\r\n\r\n        </div>\r\n        <h1>Todos os Pokemons</h1>\r\n        <br/>\r\n        <TodoItems entries={this.state.items}  delete={this.deleteItem} />\r\n          <br/>\r\n          <h1>Pokemons capturados</h1>\r\n        <TodoItems entries={this.state.myItems}  delete={this.deleteItem} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\PokemonList.js",[],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\App.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":39,"nodeType":"57","messageId":"58","endLine":2,"endColumn":48},{"ruleId":"55","severity":1,"message":"59","line":8,"column":7,"nodeType":"57","messageId":"58","endLine":8,"endColumn":24},{"ruleId":"55","severity":1,"message":"60","line":162,"column":12,"nodeType":"57","messageId":"58","endLine":162,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":269,"column":37,"nodeType":"63","endLine":269,"endColumn":39,"suggestions":"64"},{"ruleId":"55","severity":1,"message":"65","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":19},{"ruleId":"55","severity":1,"message":"66","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":17},{"ruleId":"55","severity":1,"message":"67","line":11,"column":11,"nodeType":"57","messageId":"58","endLine":11,"endColumn":23},{"ruleId":"55","severity":1,"message":"68","line":12,"column":6,"nodeType":"57","messageId":"58","endLine":12,"endColumn":24},{"ruleId":"61","severity":1,"message":"69","line":27,"column":4,"nodeType":"63","endLine":27,"endColumn":6,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":61,"column":23,"nodeType":"73","messageId":"74","endLine":61,"endColumn":25},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'jaForamCapturados' is assigned a value but never used.","'createPokemonCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPokemon'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'PokemonList' is defined but never used.","'SearchBar' is defined but never used.","'pokemonsList' is assigned a value but never used.","'pokemonsCapturados' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["78"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [getPokemon]",{"range":"83","text":"84"},"Update the dependencies array to be: [history]",{"range":"85","text":"86"},[8376,8378],"[getPokemon]",[716,718],"[history]"]