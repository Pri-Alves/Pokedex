[{"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\index.js":"1","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\routes.js":"2","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\PokemonList.js":"3","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\SearchBar.js":"4","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pokemos\\TodoItems.js":"5"},{"size":9339,"mtime":1611362414711,"results":"6","hashOfConfig":"7"},{"size":313,"mtime":1611263689081,"results":"8","hashOfConfig":"7"},{"size":401,"mtime":1611352229110,"results":"9","hashOfConfig":"7"},{"size":387,"mtime":1611352229111,"results":"10","hashOfConfig":"7"},{"size":1439,"mtime":1611361894350,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"zicip",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\index.js",["26","27","28","29","30","31"],"import axios from 'axios';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport SearchBar from './Components/SearchBar';\r\nimport PokemonList from './Components/PokemonList';\r\nimport TodoList from '../../Pokemos/TodoList';\r\n\r\nconst NUMBEROFPOKEMON = 898;\r\nlet allPokemonNames = []\r\n\r\nfunction Home(props) {\r\n\r\n\r\n  let isLoading = true;\r\n\r\n  const mainDiv = document.getElementById(\"root\");\r\n  const [input, setInput] = useState('');\r\n  const [pokemonListDefault, setPokemonListDefault] = useState();\r\n  const [pokemonList, setPokemonList] = useState();\r\n  const [pokemons, setPokemons] = useState([]);\r\n  //\r\n  // function getAllPokemonNames(){\r\n  //\r\n  //   let i = 1;\r\n  //   while(i<899){\r\n  //\r\n  //     axios.get('https://pokeapi.co/api/v2/pokemon/'+ i)\r\n  //     .then(\r\n  //       response =>{\r\n  //       allPokemonNames.push(response.data.name);\r\n  //       }\r\n  //     )\r\n  //     .catch(err =>{\r\n  //       //console.log(\"Erro ao pegar o pokemon + \"+ name);\r\n  //       console.log(err);\r\n  //     })\r\n  //     i+=1;\r\n  //   }//while\r\n  //   console.log(allPokemonNames);\r\n  // }\r\n\r\n\r\n\r\n  let paginaAtual = 1;\r\n  const ITENS_POR_PAGINA = 20;\r\n\r\n  function createPokemonCard(id, name, imageUrl, types) {\r\n    // altera o estado adicionando +1 pokemon na lista\r\n    pokemons.push({ key: id, title: name, text: name, imageUrl: imageUrl, types: types })\r\n    setPokemons(pokemons)\r\n    // useState(0);\r\n  }\r\n\r\n  function getPokemon() {\r\n\r\n\r\n    axios.get('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=9999')\r\n      .then(response => {\r\n        //console.log(response);\r\n        // setTimeout( function(){\r\n        //   document.getElementById(\"loading\").style.display = \"none\";\r\n        // }, 1500);\r\n\r\n        const pokemons = response.data.results;\r\n\r\n        const paginatedData = paginateData(pokemons);//[[][][]]\r\n\r\n\r\n\r\n\r\n        let cardContainer = document.querySelector(\".card-wrapper\");\r\n\r\n\r\n        while (cardContainer.firstChild) {\r\n          cardContainer.removeChild(cardContainer.firstChild);\r\n        }\r\n\r\n\r\n        paginatedData[paginaAtual - 1].forEach(pokemon => {\r\n\r\n          const { name, url } = pokemon;\r\n\r\n          axios.get(url) //pega cada um\r\n            .then(response => {\r\n              setTimeout(function () { //mudar lugar\r\n                document.getElementById(\"loading\").style.display = \"none\";\r\n              }, 1500);\r\n\r\n\r\n              const atributosDoPokemon = response.data;\r\n              const id = atributosDoPokemon.id;\r\n              const types = atributosDoPokemon.types;\r\n      \r\n              var imageUrl = atributosDoPokemon.sprites.front_default;\r\n              if (imageUrl == null) {\r\n                imageUrl = atributosDoPokemon.sprites.other['official-artwork'].front_default;\r\n                if (imageUrl == null) {\r\n                  imageUrl = 'https://cdn-0.imagensemoldes.com.br/wp-content/uploads/2020/04/Logo-Pokebola-Pok%C3%A9mon-PNG.png';\r\n                }\r\n              }\r\n      \r\n              // let cardContainer = document.createElement(\"div\");\r\n              // cardContainer.className =\"card-container\";\r\n              let cardContainer = document.querySelector(\".card-wrapper\");\r\n\r\n              mainDiv.appendChild(cardContainer);\r\n              createCard(id, name, imageUrl, types, cardContainer);\r\n              createPokemonCard(id, name, imageUrl, types)\r\n\r\n\r\n            })//segundo .then\r\n            .catch(err => {\r\n              console.log(\"Erro ao pegar o pokemon + \" + name);\r\n              console.log(err);\r\n            })\r\n\r\n\r\n        }); //for each\r\n\r\n        renderPaginationMenu(paginatedData);\r\n\r\n      })//fim do primeiro then\r\n      .catch(err => {\r\n        console.log(\"Erro ao puxar os pokemons\")\r\n        console.log(err);\r\n      });\r\n  }//fim de getPokemon\r\n\r\n  const paginateData = (data) => {\r\n    //receber o valor total e o atual para dividir o numero de paginas\r\n    return data.reduce((total, current, index) => {\r\n      const belongArrayIndex = Math.ceil((index + 1) / ITENS_POR_PAGINA) - 1\r\n      total[belongArrayIndex] ? total[belongArrayIndex].push(current) : total.push([current])\r\n      return total\r\n    }, [])\r\n  } //paginateData ok\r\n\r\n  const changePage = (pageToBeRendered) => {\r\n    paginaAtual = pageToBeRendered\r\n    getPokemon()\r\n  }//método de mudar de página\r\n\r\n  const renderPaginationMenu = (paginatedData) => {\r\n\r\n    const paginationContainer = document.querySelector('.pagination');\r\n\r\n    console.log(paginationContainer);\r\n\r\n    while (paginationContainer.firstChild) {\r\n      paginationContainer.removeChild(paginationContainer.firstChild);\r\n    }\r\n    //esvaziamos essa div a cada render para que não seja rendedrizado o menu com os dados da página antiga do usuário\r\n\r\n    const previousPage = document.createElement('span');\r\n    previousPage.className = 'page-changer';\r\n    previousPage.innerHTML = '<';\r\n    previousPage.addEventListener('click', () => paginaAtual <= 1 ? () => { } : changePage(paginaAtual - 1));\r\n    paginationContainer.appendChild(previousPage);\r\n    //geramos um botão que ao ser clicado atualiza chama o método de mudar de página passando a página anterior se a página\r\n    //atual não for 1\r\n\r\n    paginatedData.forEach((_, index) => {\r\n      //para cada array (página) dentro do nosso array total criaremos um botão numerado para ir para aquela página\r\n      const pageButton = document.createElement('span');\r\n      pageButton.innerHTML = (index + 1) + \" \"//index + 1 porque os indices começam em 0 e queremos mostrar a primeira página como 1\r\n\r\n      pageButton.addEventListener('click', () => changePage(index + 1));\r\n\r\n      if (paginaAtual === index + 1) {\r\n        pageButton.className = 'active';\r\n      }\r\n\r\n      paginationContainer.appendChild(pageButton);\r\n    })\r\n\r\n    const nextPage = document.createElement('span');\r\n    nextPage.className = 'page-changer';\r\n    nextPage.innerHTML = '>';\r\n    nextPage.addEventListener('click', () => paginaAtual >= paginatedData.length ? () => { } : changePage(paginaAtual + 1));\r\n\r\n    paginationContainer.appendChild(nextPage);\r\n\r\n    //por fim, método de avançãr a página que funciona igual o de voltar a página só que ao contrário :)\r\n  }// renderPaginationMenu\r\n\r\n\r\n  function createCard(id, name, imageUrl, types, cardContainer) {\r\n    //agora crio uma card com cada informação\r\n\r\n    let card = document.createElement(\"div\");\r\n    card.className = \"card\";\r\n\r\n    let cardInnerArea = document.createElement(\"div\");\r\n    cardInnerArea.className = \"card-inner-area\";\r\n\r\n    let cardImg = document.createElement(\"img\");\r\n    cardImg.className = \"card-img\";\r\n    cardImg.src = imageUrl;\r\n\r\n    let cardTextInfo = document.createElement(\"div\");\r\n    cardTextInfo.className = \"card-text-info\";\r\n\r\n    let cardName = document.createElement(\"div\");\r\n    cardName.className = \"card-name\";\r\n    cardName.innerHTML = name;\r\n\r\n    let cardId = document.createElement(\"div\");\r\n    cardId.className = \"card-id\";\r\n    cardId.innerHTML = \"#\" + id;\r\n\r\n    let typeNames = \"\";\r\n    types.forEach(element => typeNames += \" \" + element.type.name);\r\n\r\n    let cardType = document.createElement(\"div\");\r\n    cardType.className = \"types\";\r\n    cardType.innerHTML = typeNames;\r\n\r\n    let buttonCapturar = document.createElement(\"button\");\r\n    buttonCapturar.className = \"blue-button\";\r\n    buttonCapturar.innerHTML = \"Capturar\";\r\n\r\n\r\n\r\n    cardContainer.appendChild(card);\r\n    card.appendChild(cardInnerArea);\r\n    cardInnerArea.appendChild(cardImg);\r\n    cardInnerArea.appendChild(cardTextInfo);\r\n    cardTextInfo.appendChild(cardId);\r\n    cardTextInfo.appendChild(cardName);\r\n    cardTextInfo.appendChild(cardType);\r\n\r\n\r\n\r\n    card.appendChild(buttonCapturar);\r\n\r\n  } //fim de createCard\r\n\r\n  //getAllPokemonNames();\r\n  \r\n  useEffect(() => { getPokemon() }, []);\r\n\r\n\r\n  //barra de pesquisa\r\n\r\n  const fetchData = async () => {\r\n    return await fetch('https://pokeapi.co/api/v2/pokemon?offset=0&limit=1118')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setPokemonList(data.results)\r\n        setPokemonListDefault(data.results)\r\n      });\r\n  }\r\n\r\n\r\n  const updateInput = async (input) => {\r\n    const filtered = pokemonListDefault.filter(pokemon => {\r\n      return pokemon.name.toLowerCase().startsWith(input.toLowerCase())\r\n    })\r\n    setInput(input);\r\n    setPokemonList(filtered);\r\n\r\n  }\r\n\r\n  useEffect(() => { fetchData() }, []);\r\n\r\n\r\n  return (\r\n\r\n\r\n    <>\r\n\r\n      <nav>\r\n        <img src=\"./images/logo.png\" alt=\"Pokedex Logo\" class=\"logo\" />\r\n        <ul>\r\n          <li><a class=\"item-navegacao\" href=\"#\"> Todos PKMN </a></li>\r\n          <li><a class=\"item-navegacao\" href=\"#\"> Meus PKMN </a></li>\r\n          <SearchBar\r\n            input={input}\r\n            onChange={updateInput}\r\n            pokemonList={pokemonList}\r\n          />\r\n          <PokemonList pokemonList={pokemonList} />\r\n\r\n\r\n\r\n        </ul>\r\n      </nav>\r\n\r\n\r\n      <div id=\"loading\">\r\n        <img id=\"loading-image\" src=\"images/pikachu-dancing.gif\" alt=\"Carregando...\" />\r\n        <p id=\"pagina-carregando\">Página Carregando</p>\r\n      </div>\r\n\r\n      <div class=\"card-wrapper\">\r\n        <TodoList items={pokemons} />\r\n      </div>\r\n      <div class=\"pagination-wrapper\">\r\n        <div class=\"pagination\"></div>\r\n      </div>\r\n\r\n\r\n    </>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Home;",["32","33"],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\routes.js",[],["34","35"],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\PokemonList.js",[],"C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pages\\Home\\Components\\SearchBar.js",["36"],"\r\nimport React from 'react';\r\nimport PokemonList from './PokemonList'\r\n\r\nconst SearchBar = ({input:keyword, onChange:setKeyword}) => {\r\n \r\n  return (\r\n    <>\r\n    <input \r\n     class=\"caixa-buscar\"\r\n     key=\"random1\"\r\n     value={keyword}\r\n     placeholder={\"Buscar pokemon\"}\r\n     onChange={(e) => setKeyword(e.target.value)}\r\n    />\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchBar","C:\\Users\\Balves\\Desktop\\PESSOAL\\ESTUDOS\\We Can Code\\Pokedex\\pokedex\\src\\Pokemos\\TodoItems.js",[],{"ruleId":"37","severity":1,"message":"38","line":8,"column":7,"nodeType":"39","messageId":"40","endLine":8,"endColumn":22},{"ruleId":"37","severity":1,"message":"41","line":9,"column":5,"nodeType":"39","messageId":"40","endLine":9,"endColumn":20},{"ruleId":"37","severity":1,"message":"42","line":14,"column":7,"nodeType":"39","messageId":"40","endLine":14,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":240,"column":37,"nodeType":"45","endLine":240,"endColumn":39,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":275,"column":15,"nodeType":"49","endLine":275,"endColumn":50},{"ruleId":"47","severity":1,"message":"48","line":276,"column":15,"nodeType":"49","endLine":276,"endColumn":50},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"37","severity":1,"message":"56","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":19},"no-unused-vars","'NUMBEROFPOKEMON' is assigned a value but never used.","Identifier","unusedVar","'allPokemonNames' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPokemon'. Either include it or remove the dependency array.","ArrayExpression",["57"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["58"],"no-negated-in-lhs",["59"],["58"],["59"],"'PokemonList' is defined but never used.",{"desc":"60","fix":"61"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getPokemon]",{"range":"62","text":"63"},[7785,7787],"[getPokemon]"]